<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>MiJia&#39;s Blog</title>
    <link>https://neverjia.github.io/</link>
    <description>Recent content on MiJia&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 24 Mar 2024 23:11:36 +0800</lastBuildDate><atom:link href="https://neverjia.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ntp操作</title>
      <link>https://neverjia.github.io/ntp%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 24 Mar 2024 23:11:36 +0800</pubDate>
      
      <guid>https://neverjia.github.io/ntp%E6%93%8D%E4%BD%9C/</guid>
      <description>ntp的操作 ip a vi /etc/ssh/sshd_config systemctl restart sshd vi /etc/hosts mount /dev/sr0 /mnt/ cd /etc/yum.repos.d/ vi dvd.repo yum clean all yum repolist yum -y install vim mount /dev/sr0 /mnt df -h ls /mnt yum -y install httpd systemctl start httpd systemctl enable httpd ls /mnt cd /var/www/html/ mkdir dvd ls /mnt/ umount /mnt mount /dev/sr0 dvd 配置开机自动挂载 vi /etc/fstab /dev/sr0 /var/www/html/dvd iso9660 defaults 0 0 检查配置是否准确： mount -a 或者 df -h 关闭防火墙 systemctl stop firewalld NetworkManager systemctl disable firewalld NetworkManager setenforce 0 vi /etc/selinux/config enforcing 改成 disabled controller的操作 cd /etc/yum.repos.d vi dvd.repo yum clean all yum repolist 配置OpenStack YUM源 在ntp操作 mkdir /soft ①上传07-RHEL7OSP-6.0-2015-02-23.2-x86_64到这个目录 /soft ②或者也可以在装ntp系统的时候添加一个CD/DVD 再挂载 cd /var/www/html/ ls mkdir openstack 挂载 mount /soft/07-RHEL7OSP-6.0-2015-02-23.2-x86_64.iso openstack 挂载openstack yum 源 vi /etc/fstab /dev/sr0 /var/www/html/dvd iso9660 defaults 0 0 /soft/07-RHEL7OSP-6.0-2015-02-23.2-x86_64.iso /var/www/html/openstack iso9660 defaults 0 0 controller的继续操作 yum -y install vim net-tools ifconfig命令有了 cd /etc/yum.repos.d/ http://192.168.2.111/dvd 192.168.2.111代表着/var/www/html/ 192.168.2.111代表着/var/www/html/dvd 192.168.2.111代表着/var/www/html/openstack vim dvd.repo [dvd] name=dvd baseurl=http://192.168.2.111/dvd enabled=1 gpgcheck=0 [RH7-RHOS-6.0] name=RH7-RHOS-6.0 baseurl=http://192.168.2.111/openstack/RH7-RHOS-6.0 enabled=1 gpgcheck=0 [RH7-RHOS-6.0-Installer] name=RH7-RHOS-6.0-Installer baseurl=http://192.168.2.111/openstack/RH7-RHOS-6.0-Installer enabled=1 gpgcheck=0 [RHEL7-Errata] name=RHEL7-Errata baseurl=http://192.168.2.111/openstack/RHEL7-Errata enabled=1 gpgcheck=0 [RHEL-7-RHSCL-1.2] name=RHEL-7-RHSCL-1.2 baseurl=http://192.168.2.111/openstack/RHEL-7-RHSCL-1.2 enabled=1 gpgcheck=0 验证openstack yum源是否配置正确 在controller节点进行远程访问 把这个controller节点的dvd.repo文件发送到其他节点 [root@controller yum.repos.d]# vim dvd.repo [root@controller yum.repos.d]# pwd /etc/yum.repos.d scp dvd.repo root@compute:/etc/yum.repos.d/ scp dvd.repo root@ntp:/etc/yum.repos.d/ 在compute、ntp验证 cat /etc/yum.repos.d/dvd.repo</description>
    </item>
    
    <item>
      <title>Second_day</title>
      <link>https://neverjia.github.io/second_day/</link>
      <pubDate>Sun, 24 Mar 2024 23:11:36 +0800</pubDate>
      
      <guid>https://neverjia.github.io/second_day/</guid>
      <description>Second</description>
    </item>
    
    <item>
      <title>yum源相关使用</title>
      <link>https://neverjia.github.io/yum%E6%BA%90%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 24 Mar 2024 23:11:36 +0800</pubDate>
      
      <guid>https://neverjia.github.io/yum%E6%BA%90%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/</guid>
      <description>以下是一篇关于使用配置云主机Yum源的使用文档大纲： 一、引言 文档目的 文档可能适用于那些需要配置自定义Yum源的用户，或者那些在使用CentOS 7云主机时遇到Yum源配置问题的用户。 适用范围 术语和定义 二、Yum源简介 Yum是什么 Yum源（Yellowdog Updater Modified源）是指存放软件包及其相关信息的服务器或存储库。在基于 RPM 包管理的 Linux 系统中，如 CentOS、Red Hat Enterprise Linux（RHEL）等，Yum源是用来提供软件包下载和安装的地方。 Yum源的作用 Yum源是用于在Linux系统上安装、更新和删除软件包的软件管理工具。 Yum源配置文件 Yum源的配置文件位于/etc/yum.repos.d/目录下，每个仓库都有一个独立的配置文件。 三、配置Yum源 备份原有Yum源配置文件 mkdir /etc/yum.repos.d/backup cp -r /etc/yum.repos.d/ /etc/yum.repos.d/backup 配置Yum源： 1）打开终端或远程登录到云主机。 2）切换到root用户或以具有sudo特权的用户身份运行以下命令。 3）进入/etc/yum.repos.d/目录：cd /etc/yum.repos.d/ 4）创建一个新的仓库配置文件，例如local.repo：vi local.repo。 5）在编辑模式下，添加以下内容到文件中： [myrepo] name=My Yum Repository baseurl=http://example.com/yum/repository/ enabled=1 gpgcheck=1 gpgkey=http://example.com/yum/RPM-GPG-KEY-MyRepo #解释名词 #name：仓库的名称。 #baseurl：仓库的基本URL，即存储软件包的位置。 #enabled：设置为1以启用仓库。 #gpgcheck：设置为1以启用GPG密钥校验。 #gpgkey：GPG密钥的URL #保存和退出： #按下Esc键退出编辑模式。 #输入:wq保存文件并退出Vi编辑器。 #运行以下命令以清除、更新Yum缓存 yum clean all yum makecache #测试安装检查yum源是否可用,替换package_name为要安装的实际软件包的名称。 # yum install package_name 运行 yum repolist 命令，检查已配置的 Yum 源列表是否正确显示。 四、常见问题及解决方案 无法解析软件包名称或版本 # 1.错误的软件包名称或版本：请确保您输入的软件包名称和版本号是正确的。验证拼写</description>
    </item>
    
    <item>
      <title>信息管理</title>
      <link>https://neverjia.github.io/%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 24 Mar 2024 23:11:36 +0800</pubDate>
      
      <guid>https://neverjia.github.io/%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86/</guid>
      <description>1.安装pymysql python manage.py pymysql python manage.py runserver 2.修改setting.py ①报错的原因如下 ②解决方案：修改password 如果忘记数据库密码，可以试试这样做 win+r 输入services.msc，找到mysql服务，先停止在启动 在cmd终端输入 where mysql cd \Program Files\MySQL\MySQL Server 5.7\bin mysql -uroot -p Enter password: #按空格下一步就进去了 修改密码 set password for root@localhost=password(&amp;#34;root&amp;#34;); 3.创建数据库 create database studentsystem 插入数据 INSERT INTO `studentsystem`.`student` (`id`, `stu_id`, `stu_name`, `stu_phone`, `stu_address`, `stu_faculty`, `stu_major`) VALUES (&amp;#39;1&amp;#39;, &amp;#39;97&amp;#39;, &amp;#39;萝卜&amp;#39;, &amp;#39;13001010202&amp;#39;, &amp;#39;湖北&amp;#39;, &amp;#39;计算机&amp;#39;, &amp;#39;pytho课程设计&amp;#39;); 4.兼容问题（注释部分） 解决：找到此文件注释这两行D:\Python\Python37\Lib\site-packages\django\db\backends\mysql 5.需要做数据库迁移 解决是迁移数据库 python manage.py makemigrations python manage.py migrate python manage.py runserver</description>
    </item>
    
    <item>
      <title>学习</title>
      <link>https://neverjia.github.io/%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sun, 24 Mar 2024 23:11:36 +0800</pubDate>
      
      <guid>https://neverjia.github.io/%E5%AD%A6%E4%B9%A0/</guid>
      <description>学习Linux整体 1.建立整体的一个框架 2.会查询手册或者百度 3.学习的时候要知道know how再know why（知道怎么做再知道为什么） 4.计算机是一门做中学学科，一定是做的过程中学会的（实践重要） 5.适当地囫囵吞枣（不能理解某个知识点的时候继续 下一个） 6.Linux不是编程，重点是实际操作，各种指令一定要玩的溜 7.linux主要的发行版： Ubuntu(乌班图)、RedHat(红帽)、CentOS、Debain[蝶变]、Fedora、SuSE、OpenSUSE Linux内核网站The Linux Kernel Archives Linux主要指内核https://www.kernel.org、 关系Linux和Unix 下载vm Https://jingyan.baidu.com/article/ab0b56305f2882c15afa7dda.html 下载镜像 . Centos下载地址 CentOS-7-x86_64-DVD-1810.iso CentOS 7.6 DVD版4G(目前主流的生产环境) http://mirrors.163.com/centos/7.6.1810/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso CentOS-8.1.1911-x86_64-dvd1.iso CentOS 8.1 DVD版8G(未来的主流.) Http://mirrors.163.com//centos/8.1.1911/isos/x86_64/ 生成随机加密密码 g:https://suijimimashengcheng.51240.com/ G：https://suijimimashengcheng.51240.com/ 建立共享，安装VMtools</description>
    </item>
    
    <item>
      <title>数据传输</title>
      <link>https://neverjia.github.io/%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/</link>
      <pubDate>Sun, 24 Mar 2024 23:11:36 +0800</pubDate>
      
      <guid>https://neverjia.github.io/%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/</guid>
      <description>计算机间的数据传输 Window →Linux ①lrzsz yum -y install lrzsz rz sz helloworld.sh linux→Linux scp 1.txt root@192.168.1.201:/opt scp 源数据 目标数据 scp root@192.168.1.201:/test01 /opt scp root@192.168.1.201:test01 /opt mkdir -p a/b/c/d scp -r a root@192.168.1.201:/opt #拷贝文件夹 xftp #df -h # #du -h #查看磁盘占用情况 文件压缩 &amp;ndash;tar -zx（解压）v（过程）f（文件） #tar -zxvf apache-zookeeper-3.5.5-bin.tar.gz #解压文件 #143 tar -zcf apache.tar.gz apache-zookeeper-3.5.5-bin #压缩文件 tar -zxvf apache.tar.gz -C /opt #大C是 指定解压目录 -C &amp;ndash;zip和unzip 安装 #yum -y install zip unzip &amp;ndash;压缩 zip -r apache.zip apache-zookeeper-3.5.5-bin #将这个文件夹压缩为名字为 apache.zip ​ zip -r xxx.zip xxx &amp;ndash;解压 unzip xxx.zip 主机名称 DNS解析 网络相关命令 ip addr 可代替ifconfig ifconfig -bash: ifconfig: command not found ifconfig是net-tools中的一个命令，但是centos7中minima版并没有集成这个包 [root@note1 ~]# yum -y install net-tools ping：看IP能不能访问到 Telnet：看端口能不能访问到 curl:从远端获取数据 netstat（查看整个计算机端口的监控） 查看当前网络的状态 netstat -anp netstat -r netstat -anp | grep 80 curl：命令行访问某些网络的地址 -X 是访问方式 curl -XGET https://www.baidu.com #(可以访问) curl -XPOST https://www.baidu.com #(不可以访问) curl -XPOST https://www.baidu.com &amp;raquo; baidupage 加密算法 不可逆加密算法 对称加密算法 非对称加密算法 毫秒级别的效率 主节点：192.168.1.200 第二个节点是：192.168.1.201 生成秘钥 ssh-keygen -t rsa -P &amp;#39;&amp;#39; -f ~/.ssh/id_rsa -t 代表使用哪个算法 -P 正常生成 -f秘钥放在什么位置。~家目录 有个隐藏文件~/.ssh/id_ras 将公钥传递给对方 公钥传过去就放在这个目录下面 了 ~/.ssh/authorized_keys ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.1.201 # 自己主机也需要拷贝一份秘钥 主机名与Host校验 保存秘钥连接过的信息known_hosts /root/.ssh/known_hosts ssh -v -o GSSAPIAuthentication=no root@192.168.1.201 vi +/GSSAPIAuthentication /etc/ssh/ssh_config 用户-组-权限 用户 组 权限 权限赋予 管道与重定向 查进程信息 #ps -ef | head /etc/profile | tail 8.1管道 8.2重定向 Linux的系统进程 当前进程编号 [root@node1 ~]# echo $$ 1898 [root@node1 ~]# cd /proc/1898 UID PID PPID C STIME TTY TIME CMD 当前所属用户的ID 进程编号 父进程编号 命令 9.1进程信息 9.2后台信息 ping www.baidu.com &amp;amp; [root@node1 ~]# ping www.baidu.com &amp;raquo; baidu &amp;amp; [1] 1982 [root@node1 ~]# tail -F baidu 64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=8 ttl=128 time=36.5 ms 64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=9 ttl=128 time=216 ms 9.3杀死进程 kill -9 端口号（尽量不要</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://neverjia.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://neverjia.github.io/about/</guid>
      <description>关于我 我这一辈子： 扣扣搜搜地花了很多钱 机机灵灵地上了很多次当 小心翼翼地闯了很多次祸 认认真真地做了很多马虎决定</description>
    </item>
    
    
    <item>
      <title>Friend</title>
      <link>https://neverjia.github.io/friend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://neverjia.github.io/friend/</guid>
      <description> neverjia never </description>
    </item>
    
    
  </channel>
</rss>
